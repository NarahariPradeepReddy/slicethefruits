import React, { useState } from "react";
import { ThemeProvider, createTheme } from "@mui/material/styles";
import { Container, Typography, Box, TextField, Button, Alert, InputAdornment } from "@mui/material";
import VisibilityIcon from '@mui/icons-material/Visibility';
import VisibilityOffIcon from '@mui/icons-material/VisibilityOff';

const defaultTheme = createTheme();

const handleChangePassword = (event, setError) => {
    event.preventDefault();
    const data = new FormData(event.currentTarget);
    const password = data.get("password");
    const confirmPassword = data.get("confirmPassword");

    const passwordValidation = /^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

    console.log("Password:", password);
    console.log("Confirm Password:", confirmPassword);

    if (!passwordValidation.test(password)) {
        setError("Password must contain at least one capital letter, one number, and one special character.");
        return;
    }

    if (password !== confirmPassword) {
        setError("Passwords do not match.");
        return;
    }

    // Clear any previous errors
    setError(null);

    // Perform further actions like submitting the form or API call
    console.log("Password change successful:", {
        password,
        confirmPassword,
    });
};

export default function ForgotPassword() {
    const [error, setError] = useState(null);
    const [showPassword, setShowPassword] = useState(false);
    const [showConfirmPassword, setShowConfirmPassword] = useState(false);

    const togglePasswordVisibility = (field) => {
        if (field === "password") {
            setShowPassword((prevShowPassword) => !prevShowPassword);
        } else if (field === "confirmPassword") {
            setShowConfirmPassword((prevShowConfirmPassword) => !prevShowConfirmPassword);
        }
    };

    return (
        <ThemeProvider theme={defaultTheme}>
            <Container component="main" maxWidth="xs">
                <Box
                    sx={{
                        margin: 8,
                        display: "flex",
                        flexDirection: "column",
                        alignItems: "center",
                        boxShadow: "2px 5px 8px 2px grey",
                        borderRadius: "5px",
                        padding: "15px",
                        mt: 18,
                    }}
                >
                    <Typography variant="h6">Forgot Password</Typography>
                    <Box component="form" sx={{ mt: 3 }} onSubmit={(e) => handleChangePassword(e, setError)}>
                        <TextField
                            margin="normal"
                            required
                            fullWidth
                            id="password"
                            label="Password"
                            name="password"
                            autoComplete="new-password"
                            autoFocus
                            type={showPassword ? "text" : "password"}
                            InputProps={{
                                endAdornment: (
                                    <InputAdornment position="end">
                                        <Button
                                            size="small"
                                            onClick={() => togglePasswordVisibility("password")}
                                            onMouseDown={(e) => e.preventDefault()}
                                        >
                                            {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}
                                        </Button>
                                    </InputAdornment>
                                ),
                            }}
                        />
                        <TextField
                            margin="normal"
                            required
                            fullWidth
                            id="confirmPassword"
                            label="Confirm Password"
                            name="confirmPassword"
                            autoComplete="new-password"
                            type={showConfirmPassword ? "text" : "password"}
                            InputProps={{
                                endAdornment: (
                                    <InputAdornment position="end">
                                        <Button
                                            size="small"
                                            onClick={() => togglePasswordVisibility("confirmPassword")}
                                            onMouseDown={(e) => e.preventDefault()}
                                        >
                                            {showConfirmPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}
                                        </Button>
                                    </InputAdornment>
                                ),
                            }}
                        />
                        {error && <Alert severity="error">{error}</Alert>}
                        <Button
                            type="submit"
                            variant="contained"
                            fullWidth
                            sx={{ mt: 3, mb: 2 }}
                        >
                            Change Password
                        </Button>
                    </Box>
                </Box>
            </Container>
        </ThemeProvider>
    );
}
